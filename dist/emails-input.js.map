{"version":3,"sources":["webpack://EmailsInput/webpack/universalModuleDefinition","webpack://EmailsInput/webpack/bootstrap","webpack://EmailsInput/./src/index.ts","webpack://EmailsInput/./src/EmailsInput.ts","webpack://EmailsInput/./src/InputValue.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","args","elem","opts","_opts","placeholderText","_elem","_listeners","_values","HTMLElement","Error","init","map","toString","querySelector","addValue","instance","removeValue","push","_valuesElem","insertBefore","render","_inputElem","_notifyListeners","getAllValues","_stringValues","getValidValues","filter","val","isValid","replaceAllValues","values","forEach","parentNode","removeChild","subscribe","listener","unsubscribe","func","classList","add","innerHTML","_createInput","reset","document","createElement","type","placeholder","addInputValue","addEventListener","event","keyCode","e","clipboardData","getData","split","setTimeout","focus","append","EmailsInput","removeCallback","_value","_valid","_removeCallback","match","InputValue","EMAIL_REGEX","textContent","button"],"mappings":"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","file":"emails-input.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"EmailsInput\"] = factory();\n\telse\n\t\troot[\"EmailsInput\"] = factory();\n})((typeof self !== \"undefined\" ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import './base.scss';\nimport './theme.scss';\n\nimport EmailsInput from './EmailsInput';\n\nexport default function EmailsInputFactory(...args: any[]) {\n  // @ts-ignore\n  return new EmailsInput(...args);\n}\n","import InputValue from './InputValue';\nimport { EmailsInputChangeListener, EmailsInputOpts, EmailsInputUserOpts  } from './types'\n\nclass EmailsInput {\n  /**\n   * Element options.\n   */\n  private readonly _opts: EmailsInputOpts = {\n    placeholderText: 'add more people...',\n  };\n\n  /**\n   * Input container HTML element.\n   */\n  private _elem: (HTMLElement | null) = null;\n\n  /**\n   * Subscribed listeners.\n   */\n  private _listeners: EmailsInputChangeListener[] = [];\n\n  /**\n   * Input values.\n   */\n  private _values: InputValue[] = [];\n\n  /**\n   * Construct an emails input.\n   * @param {HTMLElement} elem - HTML element to be bind the EmailsInput instance\n   * to.\n   * @param {EmailsInputOpts} opts - Options\n   * @param {string} opts.placeholderText - Input placeholder text\n   */\n  constructor(elem: HTMLElement, opts: EmailsInputUserOpts = {}) {\n    if (!(elem instanceof HTMLElement)) {\n      throw new Error(\"EmailsInput() expects a HTMLElement as argument\");\n    }\n\n    this._elem = elem;\n    this._opts = {\n      ...this._opts,\n      ...opts,\n    };\n\n    this.init();\n  }\n\n  /**\n   * Return the string value representation of the values.\n   */\n  private get _stringValues(): string[] {\n    return this._values.map(value => value.toString());\n  }\n\n  /**\n   * Return reference to values container DOM element.\n   */\n  private get _valuesElem(): (HTMLElement | null) {\n    return this._elem!.querySelector('.EmailsInput-values');\n  }\n\n  /**\n   * Return reference to input DOM element.\n   */\n  private get _inputElem(): (HTMLElement | null) {\n    return this._elem!.querySelector('.EmailsInput-input');\n  }\n\n  /**\n   * Add a value to the list of values.\n   * @param {string} value - The value to be added.\n   */\n  addValue(value: string): void {\n    const self = this;\n\n    // Create InputValue instance\n    const instance = new InputValue(value, function() {\n      self.removeValue(this);\n    });\n    this._values.push(instance);\n\n    // Append value to values in DOM\n    this._valuesElem!.insertBefore(\n      instance.render(),\n      this._inputElem\n    );\n\n    this._notifyListeners();\n  }\n\n  /**\n   * Get all values.\n   */\n  getAllValues(): string[] {\n    return this._stringValues;\n  }\n\n  /**\n   * Get valid values.\n   */\n  getValidValues(): string[] {\n    return this._values\n      .filter(val => val.isValid())\n      .map(value => value.toString());\n  }\n\n  /**\n   * Replace all current values by the given values.\n   * @param {string[]} values - The new values\n   */\n  replaceAllValues(values: string[]): void {\n    this._values.forEach(val => this.removeValue(val));\n    values.forEach(val => this.addValue(val));\n  }\n\n  /**\n   * Remove a value by reference.\n   * @param {InputValue} value - Reference to InputValue to be removed.\n   */\n  removeValue(value: InputValue): void {\n    // Remove DOM element\n    value.elem!.parentNode!.removeChild(value.elem!);\n\n    this._values = this._values.filter(val => val !== value);\n    this._notifyListeners();\n  }\n\n  /**\n   * Subscribe to any changes to the values.\n   * @param {EmailsInputChangeListener} listener - Listener function\n   */\n  subscribe(listener: EmailsInputChangeListener): void {\n    this._listeners.push(listener);\n  }\n\n  /**\n   * Unsubscribe listener.\n   * @param {EmailsInputChangeListener} listener - Listener function\n   */\n  unsubscribe(listener: EmailsInputChangeListener): void {\n    this._listeners = this._listeners.filter(func => func !== listener);\n  }\n\n  /**\n   * (Re)initialize EmailsInput instance. Renders an empty form.\n   */\n  init(): void {\n    this._elem!.classList.add('EmailsInput');\n    this._elem!.innerHTML = `<div class=\"EmailsInput-values\"></div>`;\n    this._createInput();\n  }\n\n  /**\n   * Reset EmailsInput instance.\n   *\n   * Unsubscribes listeners and clears values.\n   */\n  reset(): void {\n    this._values = [];\n    this._listeners = [];\n    // Reset DOM elements\n    this._elem!.innerHTML = `<div class=\"EmailsInput-values\"></div>`;\n  }\n\n  /**\n   * Notify all listeners with current values.\n   */\n  private _notifyListeners(): void {\n    this._listeners.forEach(listener => listener.call(this, this._stringValues));\n  }\n\n  /**\n   * Create input element and attach listeners.\n   */\n  private _createInput(): void {\n    // Create element\n    const elem = document.createElement(\"input\");\n    elem.type = 'text';\n    elem.placeholder = this._opts.placeholderText;\n    elem.classList.add('EmailsInput-input');\n\n    const addInputValue = () => {\n      if (!elem.value) return;\n      this.addValue(elem.value);\n      elem.value = '';\n    };\n\n    // Add value on <enter> or comma\n    elem.addEventListener('keydown', event => {\n      if (event.keyCode === 13 || event.keyCode === 188) {\n        addInputValue();\n      }\n    });\n\n    // Add value on blur\n    elem.addEventListener('blur', () => {\n      addInputValue();\n    });\n\n    // Add comma-separated values when pasted\n    elem.addEventListener('paste', e => {\n      if (!e.clipboardData) return;\n      const text = e.clipboardData\n        .getData('text');\n      text.split(',').map(val => this.addValue(val));\n      // Clear value after the actual paste handler has copied in the text\n      setTimeout(() => elem.value = '');\n    });\n\n    // Focus input when clicking on the container elem\n    this._elem!.addEventListener('click', () => {\n      elem.focus();\n    });\n\n    this._valuesElem!.append(elem);\n  }\n}\n\nexport default EmailsInput;\n","import { InputValueRemoveCallback } from './types'\n\nclass InputValue {\n  /**\n   * Email regex used for validation (from https://emailregex.com/).\n   */\n  static EMAIL_REGEX: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  /**\n   * Holds reference to rendered DOM element once rendered.\n   */\n  elem: (HTMLElement | null) = null;\n\n  /**\n   * String value.\n   */\n  private readonly _value: string = '';\n\n  /**\n   * Flag indicating if the value is a valid email address.\n   */\n  private readonly _valid: boolean = false;\n\n  /**\n   * Callback to be called when the remove button is pressed.\n   */\n  private _removeCallback: (InputValueRemoveCallback | null) = null;\n\n  /**\n   * Construct an input value.\n   */\n  constructor(value: string, removeCallback: InputValueRemoveCallback) {\n    if (typeof value !== \"string\") {\n      throw new Error('InputValue() expects a string as argument');\n    }\n\n    this._value = value;\n    this._removeCallback = removeCallback;\n    this._valid = this.isValid();\n  }\n\n  /**\n   * Check whether the input's value is a valid email address.\n   */\n  isValid(): boolean {\n    return !!this._value.match(InputValue.EMAIL_REGEX);\n  }\n\n  /**\n   * Get string value.\n   */\n  toString(): string {\n    return this._value;\n  }\n\n  /**\n   * Render the input value.\n   */\n  render(): HTMLElement {\n    if (this.elem) return this.elem;\n\n    // Create elem\n    const elem = this.elem = document.createElement('div');\n    elem.classList.add('EmailsInput-value');\n    if (!this._valid) elem.classList.add('EmailsInput-invalid');\n    elem.textContent = this._value;\n\n    // Add remove button\n    const button = document.createElement('button');\n    button.classList.add('EmailsInput-button');\n    button.textContent = 'x';\n    elem.append(button);\n    button.addEventListener('click', this._removeCallback!.bind(this));\n\n    return elem;\n  }\n}\n\nexport default InputValue;\n"],"sourceRoot":""}